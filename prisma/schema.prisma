generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["postgresqlExtensions"]
}

generator json {
  provider = "prisma-json-types-generator"
}

datasource db {
  provider   = "postgresql"
  url        = env("DATABASE_URL")
  extensions = [uuid_ossp(map: "uuid-ossp", schema: "extensions"), vector]
}

enum Role {
  admin
  user
}

model Profile {
  id    String @id @db.Uuid
  role  Role   @default(user)
  lists List[]
}

model Taxa {
  id             Int      @id
  scientificName String
  /// [CommonNames]
  commonNames    Json     @default("{}") // { "en": ["Common name"], "fr": ["Nom commun"] }
  rank           String
  rankLevel      Int
  parentId       Int?
  // embedding        Unsupported("vector")?
  // embeddingContent String?
  createdAt      DateTime @default(now()) @db.Timestamptz(6)
  updatedAt      DateTime @default(now()) @db.Timestamptz(6)
  parent         Taxa?    @relation("TaxaToTaxa", fields: [parentId], references: [id])
  children       Taxa[]   @relation("TaxaToTaxa")
  ancestors      Taxa[]   @relation("Ancestors")
  isAncestorOf   Taxa[]   @relation("Ancestors") // not used

  sources Source[]
  medias  TaxaMedia[]

  // Group relations
  highLevelTaxaOfGroups      Group[]         @relation("GroupToHighLevelTaxa")
  highlightedSpeciesOfGroups Group[]         @relation("GroupToHighlightedSpecies")
  attributes                 Attribute[]
  lists                      ListToSpecies[]
}

model Source {
  id        Int      @id @default(autoincrement())
  sourceId  String // id from the source
  name      String // "inaturalist", "fishbase"...
  context   String // "taxaApi"
  taxaId    Int
  /// [Any]
  json      Json
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  taxa Taxa @relation(fields: [taxaId], references: [id])

  @@unique([sourceId, name, context, taxaId])
}

model TaxaMedia {
  id          Int      @id @default(autoincrement())
  taxaId      Int
  type        String // "image", "video"...
  url         String
  originalUrl String?
  attribution String?
  position    Int?
  createdAt   DateTime @default(now()) @db.Timestamptz(6)
  updatedAt   DateTime @default(now()) @db.Timestamptz(6)

  taxa Taxa @relation(fields: [taxaId], references: [id])

  @@unique([taxaId, url])
}

model Group {
  id          Int    @id @default(autoincrement())
  slug        String @unique
  /// [GroupName]
  commonNames Json   @default("{}") // { "en": "Common name", "fr": "Nom commun" }
  /// [GroupName]
  subtitle    Json   @default("{}") // { "en": "Subtitle", "fr": "Sous-titre" }
  level       Int // 0: root, 1: sub-group, 2: sub-sub-group

  // Hierarchical relations
  parentId Int?
  parent   Group?  @relation("GroupToGroup", fields: [parentId], references: [id])
  children Group[] @relation("GroupToGroup")

  highLevelTaxa      Taxa[] @relation("GroupToHighLevelTaxa") // define the high level taxa of the group
  highlightedSpecies Taxa[] @relation("GroupToHighlightedSpecies") // define the species to highlight (for medias)

  speciesCount Int @default(-1) // number of species in the group. -1 means it's not set yet

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
}

model Attribute {
  id                    Int    @id @default(autoincrement())
  taxaId                Int
  attributeDefinitionId String

  /// [Any] 
  value Json

  taxa                Taxa                @relation(fields: [taxaId], references: [id])
  attributeDefinition AttributeDefinition @relation(fields: [attributeDefinitionId], references: [id])

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  @@unique([taxaId, attributeDefinitionId])
}

model AttributeDefinition {
  id               String      @id
  definition       String
  valueType        String // string, number, boolean, integer[], string[]...
  SpeciesAttribute Attribute[]

  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)
}

model List {
  id        Int      @id @default(autoincrement())
  name      String
  createdAt DateTime @default(now()) @db.Timestamptz(6)
  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  species ListToSpecies[]
  owner   Profile?        @relation(fields: [ownerId], references: [id])
  ownerId String?         @db.Uuid
}

model ListToSpecies {
  listId Int
  taxaId Int
  list   List @relation(fields: [listId], references: [id])
  taxa   Taxa @relation(fields: [taxaId], references: [id])

  updatedAt DateTime @default(now()) @db.Timestamptz(6)

  @@id([listId, taxaId])
}
